02****************
九、数据可视化(matplotlib，数学绘图库)
1)缺省样式
曲线图：plot(水平坐标数组, 垂直坐标数组)
代码：plt1.py

2)线型、线宽和颜色
plot(..., linestyle=线型, linewidth=线宽, color=颜色)
代码：plt2.py

3)设置坐标范围
mp.xlim(最小水平坐标, 最大水平坐标)
mp.ylim(最小垂直坐标, 最大垂直坐标)
代码：plt3.py

4)设置刻度标签
mp.xticks(刻度位置数组[, 刻度文本数组])
mp.yticks(刻度位置数组[, 刻度文本数组])
代码：plt4.py

5)十字坐标轴
ax = mp.gca() # 当前坐标图
ax.spines['left'].set_position((坐标系, 位置坐标))
ax.spines['right'].set_color(颜色)
代码：plt5.py

6)显示图例
mp.plot(...,label=图例文本)
mp.legend(loc=图例位置)    #显示图例，不给loc就是默认位置

7)添加特殊点
mp.scatter(点集水平坐标数组，点集垂直坐标数组,...)
代码:plt7.py

8)添加注释
mp.annotate(
			注释文本，    				#字符串
			xy=被注释点的坐标，         #加个哪个目标上
			xycoords=被注释点的坐标属性，#一般用data，表示参考数据坐标系,而不是窗口坐标系	
			xytext=注释文本的坐标，			#
			textcoords=注释文本坐标的属性， #绝对坐标或相对坐标
			fontsize=字体大小，
			arrowprops=dict(arrowstyle=箭头形状,
				connectionstyle=箭头连线的风格)
)
代码：plt8.py

2.图形对象
一个图形对象实际上就可以被看成显示图形的窗口
函数：
mp.figure(图形名,facecolor=背景色)
创建新的或获取已有的图形对象  #依靠'图形名'来判断
图形名既可以作为显示在图形窗口标题栏中的文本，同时也是该对象的名称。
代码：fig.py


3.子坐标图
mp.subplot(ABC)
A:总行数
B:总列数
C:图形号(从1开始)
[231][232][233]
[234][235][236]
代码：sub1.py

4.栅格布局
import matplotlib.gridspec as mg
gs = mp.GridSpec(行数，列数)  #注意大小写  #返回一个栅格布局的对象
mp.subplot(gs[0,0])  #画在0行0列
mp.subplot(gs[0,:2])  #第0行，第1列，第2列
代码：sub2.py


5.自由布局
mp.axes([左,底,宽,高])  #4个参数是相对于水平和垂直坐标的比例值
#到左边框，到底边框的距离比，图形的宽度和高度
代码:sub3.py


6.刻度定位器
ax=mp.gca()
ax.xaxis...
ax.yaxis...
set_major_locator() - 设置主刻度定位器
set_minor_locator() - 设置次刻度定位器
NullLocator()         #空，不做刻度标记
MaxNLocator()         #指定最多刻度数
FixedLocator()        #由参数指定刻度
AutoLocator()         #默认的，自动选择合理的刻度
IndexLocator()        #根据偏移和增量定位刻度
MultipleLocator()     #根据指定的距离定位刻度
LinearLocator()       #根据指定的总刻度数定位刻度
LogLocator()          #根据指定的底数和指数定位刻度

ax.xaxis.set_major_locator(mp.MultipleLocator(0.1))
代码:tick.py

7.散点图
mp.scatter()
代码:scatter.py

8.区域填充
mp.fill_between(填充区域水平坐标,下限垂直坐标,填充区域垂直终止坐标，where=填充条件表达式，color=颜色，alpha=透明度)

9.柱状图
mp.bar(水平坐标数组,高度数组,宽度比例,ec=勾边色,fc=填充色,label=图例标签) #高度可以为负
#宽度比例以柱子间不留空白为1
代码:bar.py

10.等高线图  (把一个三维的量二维化)
填充颜色：
mp.contourf(x,y,z,等高线图,cmap=颜色映射)
不填充颜色：
mp.contour(x,y,z,等高线图,color=颜色,linewidth=线宽)
#x,y,z参数都是二维数组(点阵形式)
代码:cntr.py

03**************************

11.热图：和等高线图类型，只是比等高线图变换更加的缓慢
		mp.imshow(z,cmap=颜色映射,origin=垂直轴向)
		  x,y为矩阵z的下标
		mp.imshow(z,camp='jet',origin='low')#设置热图显示,low符合人们的视图习惯,所以一般设置
		mp.colorbar().set_label('z',fontsize=14)#设置颜色参照,相当于是指标准颜色对比条
		代码:imshow.py

12.饼图
	mp.pie(值数组,间隙数组,标签数组,颜色数组,标准格式,shadow=是否绘制阴影,每个扇形的标签,扇形颜色)
	代码:pie.py


13.三维曲面图
ax = mp.gca(projection='3d')
#获取一个可以画3d效果的轴对象(坐标图对象)
ax.plot_surface(x,y,z,rstrid=行步距,cstride=列步距,cmap=颜色映射)
代码:sf.py


14.三维线框图
ax = mp.gca(projection='3d')
ax.plot_wireframe(x,y,z,rstride=行步距,cstride=列步距,color=线框颜色)
代码:wf.py

15.动画
FuncAnimation(图形对象,绘制函数,interval=事件间隔(ms))
# matplotlib库会在每间隔interval事件后调用
代码:bub.py

def FuncAnimation(图形对象,绘制函数,生成器函数,interval=时间间隔(s):
	...
	for data in 生成器函数:
		绘制函数(data)
		延时interval
	...
代码:sig.py

16.坐标线
ax = mp.gca()
ax.grid(which='major'/'minor',axis='x'/'y'/'both',
		linewidth=线宽,linestyle=线型,color=颜色)
		#主刻度/次刻度,哪个轴
代码:grid.py

17.对数坐标(遇到值域差别很大时,对数可以 把 小数放大,大数缩小,但又不改变排序)
mp.semilogy()  #参数与mp.plot完全一样   ;半对数坐标
代码:log.py


四.numpy的通用函数
1.读取csv文件,
列数组元组 = np.loadtxt(
			文件路径,
			delimiter=分隔符字符串,  	#逗号,空格,句号
			usecols = 选择列的元组,  	#读取哪些列
			unpack = 是否类型转换,	 	#如果设为True,则按下面的定义来转变类型,False自动转换成默认类型
			dtype = 目标类型列表,		#
			converters = 转换器字典		#某些类型不能直接转成目标类型,需要先用converters转成一个中间类型
)
代码:k.py



2.算数平均值
样本S:[s1,s2,...,sn]
算数平均值m=(s1+s2+...+sn)/n
np.mean(S)
代码:mean.py



******************************************
poison_bottle = random.randint(1,1000)

{1:[],2:[],...}

dead_mouse = []

....poison_bottle

dead_mouse = [5,4,1]

....dead_mouse 
find_bottle =25?

print(poison_bottle)
print(find_bottle)
*******************************************


3张支票,1张真的,两张假的,主持人拿出桌子中的一张扔掉(假的),请你是否坚持原来的选择,或是更改选择?

















